import Head from 'next/head'
import Image from 'next/image'
import React from 'react'
import styles from '../styles/Home.module.css'

import { ScrollMenu, VisibilityContext } from 'react-horizontal-scrolling-menu'

const elemPrefix = 'test'
const getId = (index) => `${elemPrefix}${index}`

const getItems = () =>
  Array(20)
    .fill(0)
    .map((_, ind) => ({ id: getId(ind) }))

export default function Home() {
  const [items, setItems] = React.useState(getItems)
  const [selected, setSelected] = React.useState([])
  const [position, setPosition] = React.useState(300)

  function savePosition({ scrollContainer }) {
    setPosition(scrollContainer.scrollLeft)
  }

  React.useEffect(() => {
    setTimeout(() => {
      const newItems = items.concat(
        Array(5)
          .fill(0)
          .map((_, ind) => ({ id: getId(items.length + ind) }))
      )
      console.log('push new items')
      setItems(newItems)
    }, 3000)
  }, [])

  const toggleSelected = (id) => {
    const isSelected = selected.find((el) => el === id)

    setSelected((currentSelected) =>
      isSelected
        ? currentSelected.filter((el) => el !== id)
        : currentSelected.concat(id)
    )
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <div style={{ width: '100%' }}>
          <ScrollMenu
            LeftArrow={LeftArrow}
            RightArrow={RightArrow}
            onInit={({ scrollContainer }) => {
              scrollContainer.current.scrollLeft = position
            }}
            onScroll={savePosition}
          >
            {items.map(({ id }) => (
              <Card
                id={id}
                itemId={id}
                title={id}
                key={id}
                onClick={(ev) => toggleSelected(id, ev)}
                selected={!!selected.find((el) => el === id)}
              />
            ))}
          </ScrollMenu>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}

function LeftArrow() {
  const { isFirstItemVisible, scrollPrev } = React.useContext(VisibilityContext)

  return (
    <Arrow disabled={isFirstItemVisible} onClick={scrollPrev}>
      Left
    </Arrow>
  )
}

function RightArrow() {
  const { isLastItemVisible, scrollNext } = React.useContext(VisibilityContext)

  return (
    <Arrow disabled={isLastItemVisible} onClick={scrollNext}>
      Right
    </Arrow>
  )
}

function Arrow({ children, disabled, onClick }) {
  return (
    <button
      disabled={disabled}
      onClick={onClick}
      style={{
        cursor: 'pointer',
        display: 'flex',
        flexDirection: 'column',
        justifyContent: 'center',
        right: '1%',
        userSelect: 'none',
      }}
    >
      {children}
    </button>
  )
}

function Card({ onClick, selected, title, itemId }) {
  const { isItemVisible } = React.useContext(VisibilityContext)

  const visible = isItemVisible(itemId)

  return (
    <div className={styles.card} onClick={onClick} tabIndex="0">
      <div style={{ backgroundColor: visible ? 'white' : 'grey' }}>
        <div>{title}</div>
        <div>visible: {JSON.stringify(visible)}</div>
        <div>selected: {JSON.stringify(!!selected)}</div>
      </div>
      <div
        style={{
          backgroundColor: selected ? 'green' : 'bisque',
          height: '200px',
        }}
      />
    </div>
  )
}
