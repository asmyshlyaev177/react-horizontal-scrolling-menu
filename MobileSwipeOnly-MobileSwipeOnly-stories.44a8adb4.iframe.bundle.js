"use strict";(globalThis.webpackChunkreact_horizontal_scrolling_menu=globalThis.webpackChunkreact_horizontal_scrolling_menu||[]).push([[196],{"./stories/MobileSwipeOnly/MobileSwipeOnly.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{MobileSwipeOnly:()=>MobileSwipeOnly_stories_MobileSwipeOnly,Test:()=>Test,__namedExportsOrder:()=>__namedExportsOrder,default:()=>MobileSwipeOnly_stories});var _MobileSwipeOnly_parameters,_MobileSwipeOnly_parameters_docs,_MobileSwipeOnly_parameters1,_Test_parameters,_Test_parameters_docs,_Test_parameters1,react=__webpack_require__("./node_modules/react/index.js"),es=__webpack_require__("./node_modules/storybook-addon-code-editor/dist/es/index.js"),styled_jss=__webpack_require__("./node_modules/styled-jss/index.js"),setupEditor=__webpack_require__("./stories/setupEditor.ts"),src=__webpack_require__("./src/index.tsx"),test=__webpack_require__("./stories/test.tsx"),SizeWrapper=__webpack_require__("./stories/SizeWrapper.tsx"),dist=__webpack_require__("./dist/index.mjs");function _array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _array_with_holes(arr){if(Array.isArray(arr))return arr}function _iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function _non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _sliced_to_array(arr,i){return _array_with_holes(arr)||_iterable_to_array_limit(arr,i)||_unsupported_iterable_to_array(arr,i)||_non_iterable_rest()}function _unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return _array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _array_like_to_array(o,minLen)}}var useSwipe=function(){var _React_useState=_sliced_to_array(react.useState(0),2),touchStart=_React_useState[0],setTouchStart=_React_useState[1],_React_useState1=_sliced_to_array(react.useState(0),2),touchEnd=_React_useState1[0],setTouchEnd=_React_useState1[1];return{onTouchStart:function(){return function(ev){setTouchEnd(0),setTouchStart(ev.targetTouches[0].clientX)}},onTouchEnd:function(apiObj){return function(){if(!touchStart||!touchEnd)return!1;var distance=touchStart-touchEnd;Math.abs(distance)>20&&(distance<20?apiObj.scrollPrev():apiObj.scrollNext())}},onTouchMove:function(){return function(ev){console.log({ev:ev}),setTouchEnd(ev.targetTouches[0].clientX)}}}},NoScrollbar=(0,styled_jss.ZP)("div")({"&":{position:"relative"},"& .react-horizontal-scrolling-menu--scroll-container::-webkit-scrollbar":{display:"none"},"& .react-horizontal-scrolling-menu--scroll-container":{scrollbarWidth:"none","-ms-overflow-style":"none"}});function LeftArrow(){var _React_useContext=react.useContext(dist.$8),initComplete=_React_useContext.initComplete,isFirstItemVisible=_React_useContext.isFirstItemVisible,scrollPrev=_React_useContext.scrollPrev;return react.createElement(Arrow,{disabled:!initComplete||initComplete&&isFirstItemVisible,onClick:function(){return scrollPrev()},testId:"left-arrow"},"Left")}function RightArrow(){var _React_useContext=react.useContext(dist.$8),initComplete=_React_useContext.initComplete,isLastItemVisible=_React_useContext.isLastItemVisible,scrollNext=_React_useContext.scrollNext;return react.createElement(Arrow,{disabled:initComplete&&isLastItemVisible,onClick:function(){return scrollNext()},testId:"right-arrow"},"Right")}function Arrow(param){var children=param.children,disabled=param.disabled,onClick=param.onClick,className=param.className,testId=param.testId;return react.createElement(ArrowButton,{disabled:disabled,onClick:onClick,className:"arrow"+"-".concat(className),"data-testid":testId},children)}var ArrowButton=(0,styled_jss.ZP)("button")({cursor:"pointer",display:"flex",flexDirection:"column",justifyContent:"center",marginBottom:"2px",opacity:function(props){return props.disabled?"0":"1"},userSelect:"none",borderRadius:"6px",borderWidth:"1px"});function Card(param){var onClick=param.onClick,selected=param.selected,title=param.title,itemId=param.itemId,visibility=react.useContext(dist.$8),visible=!visibility.initComplete||visibility.initComplete&&visibility.isItemVisible(itemId);return react.createElement(CardBody,{"data-cy":itemId,onClick:function(){return onClick(visibility)},onKeyDown:function(ev){"Enter"===ev.code&&onClick(visibility)},"data-testid":"card",role:"button",tabIndex:0,className:"card",visible:visible,selected:selected},react.createElement("div",{className:"header"},react.createElement("div",null,title),react.createElement("div",{className:"visible"},"visible: ",JSON.stringify(visible)),react.createElement("div",{className:"selected"},"selected: ",JSON.stringify(!!selected))),react.createElement("div",{className:"background"}))}var CardBody=(0,styled_jss.ZP)("div")({border:"1px solid",display:"inline-block",margin:"0 10px",width:"160px",userSelect:"none",borderRadius:"8px",overflow:"hidden","& .header":{backgroundColor:"white"},"& .visible":{backgroundColor:function(props){return props.visible?"transparent":"gray"}},"& .background":{backgroundColor:function(props){return props.selected?"green":"bisque"},height:"200px"}});function onWheel(apiObj,ev){if(0!==Math.abs(ev.deltaX)||15>Math.abs(ev.deltaY)){ev.stopPropagation();return}ev.deltaY<0?apiObj.scrollNext():ev.deltaY>0&&apiObj.scrollPrev()}function _define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){_define_property(target,key,source[key])})}return target}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function _object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}let MobileSwipeOnly_stories={title:"Examples/MobileSwipeOnly",component:function(){var items=_sliced_to_array(react.useState(function(){return Array(10).fill(0).map(function(_,ind){return{id:"test".concat(ind)}})}),1)[0],_React_useState1=_sliced_to_array(react.useState([]),2),selected=_React_useState1[0],setSelected=_React_useState1[1],isItemSelected=function(id){return!!selected.find(function(el){return el===id})},handleItemClick=function(itemId){var itemSelected=isItemSelected(itemId);setSelected(function(currentSelected){return itemSelected?currentSelected.filter(function(el){return el!==itemId}):currentSelected.concat(itemId)})},_useSwipe=useSwipe(),onTouchEnd=_useSwipe.onTouchEnd,onTouchMove=_useSwipe.onTouchMove,onTouchStart=_useSwipe.onTouchStart,ref=react.useRef(null);return react.useEffect(function(){var onTouchMove=function(ev){ev.preventDefault()},node=ref.current.scrollContainer.current;return null==node||node.addEventListener("touchmove",onTouchMove,{passive:!1}),function(){return null==node?void 0:node.removeEventListener("touchmove",onTouchMove)}},[ref]),react.createElement(NoScrollbar,null,react.createElement(dist.lS,{LeftArrow:LeftArrow,RightArrow:RightArrow,onWheel:onWheel,onTouchEnd:onTouchEnd,onTouchMove:onTouchMove,onTouchStart:onTouchStart,apiRef:ref},items.map(function(param){var id=param.id;return react.createElement(Card,{title:id,itemId:id,key:id,onClick:function(){return handleItemClick(id)},selected:isItemSelected(id)})})))},decorators:[function(Story){return react.createElement(SizeWrapper.N,null,react.createElement(Story,null))}]};var MobileSwipeOnly_stories_MobileSwipeOnly=(0,es.cj)({code:"import React from 'react';\nimport {\n  ScrollMenu,\n  VisibilityContext,\n  publicApiType,\n} from 'react-horizontal-scrolling-menu';\nimport styled from 'styled-jss';\n\nexport function MobileSwipeOnly() {\n  const [items] = React.useState(() => getItems());\n  const [selected, setSelected] = React.useState<string[]>([]);\n\n  const isItemSelected = (id: string): boolean =>\n    !!selected.find((el) => el === id);\n\n  const handleItemClick = (itemId: string) => {\n    const itemSelected = isItemSelected(itemId);\n\n    setSelected((currentSelected: string[]) =>\n      itemSelected\n        ? currentSelected.filter((el) => el !== itemId)\n        : currentSelected.concat(itemId)\n    );\n  };\n\n  const { onTouchEnd, onTouchMove, onTouchStart } = useSwipe();\n\n  const ref = React.useRef<publicApiType>(null);\n\n  // NOTE: that ugly hack needed cause React v18 changed how it handle events\n  React.useEffect(() => {\n    const onTouchMove = (ev: TouchEvent) => {\n      ev.preventDefault();\n    };\n    const node = ref.current.scrollContainer.current;\n    node?.addEventListener('touchmove', onTouchMove, { passive: false });\n\n    return () => node?.removeEventListener('touchmove', onTouchMove);\n  }, [ref]);\n\n  return (\n    <NoScrollbar>\n      <ScrollMenu\n        LeftArrow={LeftArrow}\n        RightArrow={RightArrow}\n        onWheel={onWheel}\n        onTouchEnd={onTouchEnd}\n        onTouchMove={onTouchMove}\n        onTouchStart={onTouchStart}\n        apiRef={ref}\n      >\n        {items.map(({ id }) => (\n          <Card\n            title={id}\n            itemId={id} // NOTE: itemId is required for track items\n            key={id}\n            onClick={() => handleItemClick(id)}\n            selected={isItemSelected(id)}\n          />\n        ))}\n      </ScrollMenu>\n    </NoScrollbar>\n  );\n}\n\nexport default MobileSwipeOnly;\n\nexport const useSwipe = () => {\n  const [touchStart, setTouchStart] = React.useState(0);\n  const [touchEnd, setTouchEnd] = React.useState(0);\n\n  // the required distance between touchStart and touchEnd to be detected as a swipe\n  const minSwipeDistance = 20;\n\n  const onTouchStart = () => (ev: React.TouchEvent) => {\n    setTouchEnd(0);\n    setTouchStart(ev.targetTouches[0].clientX);\n  };\n\n  const onTouchMove = () => (ev: React.TouchEvent) => {\n    console.log({ ev });\n    setTouchEnd(ev.targetTouches[0].clientX);\n  };\n\n  const onTouchEnd = (apiObj: publicApiType) => () => {\n    if (!touchStart || !touchEnd) return false;\n    const distance = touchStart - touchEnd;\n    const isSwipe = Math.abs(distance) > minSwipeDistance;\n    const isLeftSwipe = distance < minSwipeDistance;\n    if (isSwipe) {\n      if (isLeftSwipe) {\n        apiObj.scrollPrev();\n      } else {\n        apiObj.scrollNext();\n      }\n    }\n  };\n\n  return { onTouchStart, onTouchEnd, onTouchMove };\n};\n\nconst NoScrollbar = styled('div')({\n  '&': {\n    position: 'relative',\n  },\n  '& .react-horizontal-scrolling-menu--scroll-container::-webkit-scrollbar': {\n    display: 'none',\n  },\n  '& .react-horizontal-scrolling-menu--scroll-container': {\n    scrollbarWidth: 'none',\n    '-ms-overflow-style': 'none',\n  },\n});\n\nfunction LeftArrow() {\n  const { initComplete, isFirstItemVisible, scrollPrev } =\n    React.useContext<publicApiType>(VisibilityContext);\n  // NOTE initComplete is a hack for  prevent blinking on init\n  // Can get visibility of item only after it's rendered\n\n  return (\n    <Arrow\n      disabled={!initComplete || (initComplete && isFirstItemVisible)}\n      onClick={() => scrollPrev()}\n      testId=\"left-arrow\"\n    >\n      Left\n    </Arrow>\n  );\n}\n\nfunction RightArrow() {\n  const { initComplete, isLastItemVisible, scrollNext } =\n    React.useContext<publicApiType>(VisibilityContext);\n\n  return (\n    <Arrow\n      disabled={initComplete && isLastItemVisible}\n      onClick={() => scrollNext()}\n      testId=\"right-arrow\"\n    >\n      Right\n    </Arrow>\n  );\n}\n\nfunction Arrow({\n  children,\n  disabled,\n  onClick,\n  className,\n  testId,\n}: {\n  children: React.ReactNode;\n  disabled: boolean;\n  onClick: VoidFunction;\n  className?: String;\n  testId: String;\n}) {\n  return (\n    <ArrowButton\n      disabled={disabled}\n      onClick={onClick}\n      className={'arrow' + `-${className}`}\n      data-testid={testId}\n    >\n      {children}\n    </ArrowButton>\n  );\n}\nconst ArrowButton = styled('button')({\n  cursor: 'pointer',\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  marginBottom: '2px',\n  opacity: (props) => (props.disabled ? '0' : '1'),\n  userSelect: 'none',\n  borderRadius: '6px',\n  borderWidth: '1px',\n});\n\nfunction Card({\n  onClick,\n  selected,\n  title,\n  itemId,\n}: {\n  disabled?: boolean;\n  onClick: Function;\n  selected: boolean;\n  title: string;\n  itemId: string;\n}) {\n  const visibility = React.useContext<publicApiType>(VisibilityContext);\n\n  const visible =\n    !visibility.initComplete ||\n    (visibility.initComplete && visibility.isItemVisible(itemId));\n\n  return (\n    <CardBody\n      data-cy={itemId}\n      onClick={() => onClick(visibility)}\n      onKeyDown={(ev) => {\n        ev.code === 'Enter' && onClick(visibility);\n      }}\n      data-testid=\"card\"\n      role=\"button\"\n      tabIndex={0}\n      className=\"card\"\n      visible={visible}\n      selected={selected}\n    >\n      <div className=\"header\">\n        <div>{title}</div>\n        <div className=\"visible\">visible: {JSON.stringify(visible)}</div>\n        <div className=\"selected\">selected: {JSON.stringify(!!selected)}</div>\n      </div>\n      <div className=\"background\" />\n    </CardBody>\n  );\n}\nconst CardBody = styled('div')({\n  border: '1px solid',\n  display: 'inline-block',\n  margin: '0 10px',\n  width: '160px',\n  userSelect: 'none',\n  borderRadius: '8px',\n  overflow: 'hidden',\n\n  '& .header': {\n    backgroundColor: 'white',\n  },\n\n  '& .visible': {\n    backgroundColor: (props) => (props.visible ? 'transparent' : 'gray'),\n  },\n\n  '& .background': {\n    backgroundColor: (props) => (props.selected ? 'green' : 'bisque'),\n    height: '200px',\n  },\n});\n\nconst getId = (index: number) => `${'test'}${index}`;\n\nconst getItems = () =>\n  Array(10)\n    .fill(0)\n    .map((_, ind) => ({ id: getId(ind) }));\n\nfunction onWheel(apiObj: publicApiType, ev: React.WheelEvent): void {\n  // NOTE: no good standart way to distinguish touchpad scrolling gestures\n  // but can assume that gesture will affect X axis, mouse scroll only Y axis\n  // of if deltaY too small probably is it touchpad\n  const isThouchpad = Math.abs(ev.deltaX) !== 0 || Math.abs(ev.deltaY) < 15;\n\n  if (isThouchpad) {\n    ev.stopPropagation();\n    return;\n  }\n\n  if (ev.deltaY < 0) {\n    apiObj.scrollNext();\n  } else if (ev.deltaY > 0) {\n    apiObj.scrollPrev();\n  }\n}\n",availableImports:{react:react,"react-horizontal-scrolling-menu":src,"styled-jss":styled_jss.ZP},modifyEditor:setupEditor.T}),Test=(0,test.eM)();MobileSwipeOnly_stories_MobileSwipeOnly.parameters=_object_spread_props(_object_spread({},MobileSwipeOnly_stories_MobileSwipeOnly.parameters),{docs:_object_spread_props(_object_spread({},null===(_MobileSwipeOnly_parameters=MobileSwipeOnly_stories_MobileSwipeOnly.parameters)||void 0===_MobileSwipeOnly_parameters?void 0:_MobileSwipeOnly_parameters.docs),{source:_object_spread({originalSource:"createLiveEditStory({\n  code: ExampleRaw,\n  availableImports: {\n    react: React,\n    'react-horizontal-scrolling-menu': Lib,\n    'styled-jss': styled\n  },\n  modifyEditor: setupEditor\n})"},null===(_MobileSwipeOnly_parameters1=MobileSwipeOnly_stories_MobileSwipeOnly.parameters)||void 0===_MobileSwipeOnly_parameters1?void 0:null===(_MobileSwipeOnly_parameters_docs=_MobileSwipeOnly_parameters1.docs)||void 0===_MobileSwipeOnly_parameters_docs?void 0:_MobileSwipeOnly_parameters_docs.source)})}),Test.parameters=_object_spread_props(_object_spread({},Test.parameters),{docs:_object_spread_props(_object_spread({},null===(_Test_parameters=Test.parameters)||void 0===_Test_parameters?void 0:_Test_parameters.docs),{source:_object_spread({originalSource:"ScrollTest()"},null===(_Test_parameters1=Test.parameters)||void 0===_Test_parameters1?void 0:null===(_Test_parameters_docs=_Test_parameters1.docs)||void 0===_Test_parameters_docs?void 0:_Test_parameters_docs.source)})});let __namedExportsOrder=["MobileSwipeOnly","Test"];try{MobileSwipeOnly_stories_MobileSwipeOnly.displayName="MobileSwipeOnly",MobileSwipeOnly_stories_MobileSwipeOnly.__docgenInfo={description:"",displayName:"MobileSwipeOnly",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/MobileSwipeOnly/MobileSwipeOnly.stories.tsx#MobileSwipeOnly"]={docgenInfo:MobileSwipeOnly_stories_MobileSwipeOnly.__docgenInfo,name:"MobileSwipeOnly",path:"stories/MobileSwipeOnly/MobileSwipeOnly.stories.tsx#MobileSwipeOnly"})}catch(__react_docgen_typescript_loader_error){}},"./stories/SizeWrapper.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>SizeWrapper});var SizeWrapper=(0,__webpack_require__("./node_modules/styled-jss/index.js").ZP)("div")({maxWidth:"650px",maxHeight:"400px"})}}]);