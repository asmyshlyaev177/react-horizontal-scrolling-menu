"use strict";(globalThis.webpackChunkreact_horizontal_scrolling_menu=globalThis.webpackChunkreact_horizontal_scrolling_menu||[]).push([[808],{"./stories/99_performance/Performance.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Performance:()=>Performance_stories_Performance,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Performance_stories});var react=__webpack_require__("./node_modules/react/index.js"),es=__webpack_require__("./node_modules/storybook-addon-code-editor/dist/es/index.js"),setupEditor=__webpack_require__("./stories/setupEditor.ts"),availableImports=__webpack_require__("./stories/availableImports.ts"),styled_jss=__webpack_require__("./node_modules/styled-jss/index.js"),dist=__webpack_require__("./dist/index.mjs");function _array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _array_with_holes(arr){if(Array.isArray(arr))return arr}function _class_call_check(instance,Constructor){if(!(instance instanceof Constructor))throw TypeError("Cannot call a class as a function")}function _define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function _non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _sliced_to_array(arr,i){return _array_with_holes(arr)||_iterable_to_array_limit(arr,i)||_unsupported_iterable_to_array(arr,i)||_non_iterable_rest()}function _unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return _array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _array_like_to_array(o,minLen)}}__webpack_require__("./dist/styles.css");var DragDealer=function DragDealer(){var _this=this;_class_call_check(this,DragDealer),_define_property(this,"clicked",void 0),_define_property(this,"dragging",void 0),_define_property(this,"position",void 0),_define_property(this,"dragStart",function(ev){_this.position=ev.clientX,_this.clicked=!0}),_define_property(this,"dragStop",function(){window.requestAnimationFrame(function(){_this.dragging=!1,_this.clicked=!1})}),_define_property(this,"dragMove",function(ev,cb){var newDiff=_this.position-ev.clientX,movedEnough=Math.abs(newDiff)>5;_this.clicked&&movedEnough&&(_this.dragging=!0),_this.dragging&&movedEnough&&(_this.position=ev.clientX,cb(newDiff))}),this.clicked=!1,this.dragging=!1,this.position=0},LeftArrow=react.memo(function(){var visibility=react.useContext(dist.CI),isFirstItemVisible=visibility.useIsVisible("first",!0);return react.createElement(Arrow,{disabled:isFirstItemVisible,onClick:function(){return visibility.scrollPrev()},testId:"left-arrow"},"Left")}),RightArrow=react.memo(function(){var visibility=react.useContext(dist.CI),isLastItemVisible=visibility.useIsVisible("last",!1);return react.createElement(Arrow,{disabled:isLastItemVisible,onClick:function(){return visibility.scrollNext()},testId:"right-arrow"},"Right")});function Arrow(param){var children=param.children,disabled=param.disabled,onClick=param.onClick,testId=param.testId;return react.createElement(ArrowButton,{disabled:disabled,onClick:onClick,"data-testid":testId},children)}var ArrowButton=(0,styled_jss.cp)("button")({cursor:"pointer",display:"flex",flexDirection:"column",justifyContent:"center",marginBottom:"2px",opacity:function(props){return props.disabled?"0":"1"},userSelect:"none",borderRadius:"6px",borderWidth:"1px"}),Card=react.memo(function(param){var onClick=param.onClick,selected=param.selected,title=param.title,itemId=param.itemId,isVisible=react.useContext(dist.CI).useIsVisible(itemId,!0),isVisibleDeffered=react.useDeferredValue(isVisible),handleClick=react.useCallback(function(){return onClick(itemId)},[itemId,onClick]),onKeyDown=react.useCallback(function(ev){"Enter"===ev.code&&handleClick()},[handleClick]);return react.createElement(CardBody,{"data-cy":itemId,onClick:handleClick,onKeyDown:onKeyDown,"data-testid":"card",role:"button",tabIndex:0,className:"card",visible:isVisibleDeffered,selected:selected},react.createElement("div",{className:"header"},react.createElement("div",null,title),react.createElement("div",{className:"visible"},"visible: ",JSON.stringify(isVisibleDeffered)),react.createElement("div",{className:"selected"},"selected: ",JSON.stringify(!!selected))),react.createElement("div",{className:"background"}))},function(prevProps,nextProps){return prevProps.selected===nextProps.selected&&prevProps.title===nextProps.title}),CardBody=(0,styled_jss.cp)("div")({border:"1px solid",display:"inline-block",margin:"0 10px",width:"160px",userSelect:"none",borderRadius:"8px",overflow:"hidden","& .header":{backgroundColor:"white"},"& .visible":{backgroundColor:function(props){return props.visible?"transparent":"gray"}},"& .background":{backgroundColor:function(props){return props.selected?"green":"bisque"},height:"200px"}});function onWheel(apiObj,ev){if(0!==Math.abs(ev.deltaX)||15>Math.abs(ev.deltaY)){ev.stopPropagation();return}ev.deltaY<0?apiObj.scrollNext():apiObj.scrollPrev()}let Performance_stories={title:"Examples/Performance",component:function(){var items=_sliced_to_array(react.useState(function(){var count;return count=5e3,Array(5e3).fill(0).map(function(_,ind){return{id:"test".concat(ind)}})}),1)[0],_React_useState1=_sliced_to_array(react.useState([]),2),selected=_React_useState1[0],setSelected=_React_useState1[1],dragState=react.useRef(new DragDealer),handleDrag=react.useCallback(function(param){var scrollContainer=param.scrollContainer;return function(ev){return dragState.current.dragMove(ev,function(posDiff){scrollContainer.current&&(scrollContainer.current.scrollLeft+=posDiff)})}},[]),onMouseDown=react.useCallback(function(){return dragState.current.dragStart},[dragState]),onMouseUp=react.useCallback(function(){return dragState.current.dragStop},[dragState]),handleItemClick=react.useCallback(function(itemId){if(dragState.current.dragging)return!1;setSelected(function(currentSelected){return currentSelected.includes(itemId)?currentSelected.filter(function(el){return el!==itemId}):currentSelected.concat(itemId)})},[]);return react.createElement(react.Fragment,null,react.createElement("div",{style:{marginBottom:"50px"}},5e3," items and still fast!"),react.createElement("div",{onMouseLeave:dragState.current.dragStop},react.createElement(dist.sD,{LeftArrow:LeftArrow,RightArrow:RightArrow,onMouseDown:onMouseDown,onMouseUp:onMouseUp,onMouseMove:handleDrag,onWheel:onWheel,noPolyfill:!0},items.map(function(param){var id=param.id;return react.createElement(Card,{title:id,itemId:id,key:id,onClick:handleItemClick,selected:selected.includes(id)})}))))},decorators:[function(Story){return react.createElement(Story,null)}]};var Performance_stories_Performance=(0,es.IV)({code:"import React from 'react';\nimport styled from 'styled-jss';\n\nimport {\n  ScrollMenu,\n  VisibilityContext,\n  type publicApiType,\n} from 'react-horizontal-scrolling-menu';\n\nimport 'react-horizontal-scrolling-menu/dist/styles.css';\n\nconst ITEMS = 5000;\n\nexport function Performance() {\n  const [items] = React.useState(() => getItems(ITEMS));\n  const [selected, setSelected] = React.useState<string[]>([]);\n\n  // NOTE: for drag by mouse\n  const dragState = React.useRef(new DragDealer());\n\n  const handleDrag = React.useCallback(\n    ({ scrollContainer }: typeof VisibilityContext) =>\n      (ev: React.MouseEvent) =>\n        dragState.current.dragMove(ev, (posDiff) => {\n          if (scrollContainer.current) {\n            scrollContainer.current.scrollLeft += posDiff;\n          }\n        }),\n    [],\n  );\n\n  const onMouseDown = React.useCallback(\n    () => dragState.current.dragStart,\n    [dragState],\n  );\n  const onMouseUp = React.useCallback(\n    () => dragState.current.dragStop,\n    [dragState],\n  );\n\n  const handleItemClick = React.useCallback((itemId: string) => {\n    if (dragState.current.dragging) {\n      return false;\n    }\n\n    setSelected((currentSelected: string[]) =>\n      currentSelected.includes(itemId)\n        ? currentSelected.filter((el) => el !== itemId)\n        : currentSelected.concat(itemId),\n    );\n  }, []);\n\n  return (\n    <>\n      <div style={{ marginBottom: '50px' }}>{ITEMS} items and still fast!</div>\n      <div onMouseLeave={dragState.current.dragStop}>\n        <ScrollMenu\n          LeftArrow={LeftArrow}\n          RightArrow={RightArrow}\n          onMouseDown={onMouseDown}\n          onMouseUp={onMouseUp}\n          onMouseMove={handleDrag}\n          onWheel={onWheel}\n          // better for performance\n          noPolyfill={true}\n        >\n          {items.map(({ id }) => (\n            <Card\n              title={id}\n              itemId={id} // NOTE: itemId is required for track items\n              key={id}\n              onClick={handleItemClick}\n              selected={selected.includes(id)}\n            />\n          ))}\n        </ScrollMenu>\n      </div>\n    </>\n  );\n}\nexport default Performance;\n\nclass DragDealer {\n  clicked: boolean;\n  dragging: boolean;\n  position: number;\n\n  constructor() {\n    this.clicked = false;\n    this.dragging = false;\n    this.position = 0;\n  }\n\n  public dragStart = (ev: React.MouseEvent) => {\n    this.position = ev.clientX;\n    this.clicked = true;\n  };\n\n  public dragStop = () => {\n    window.requestAnimationFrame(() => {\n      this.dragging = false;\n      this.clicked = false;\n    });\n  };\n\n  public dragMove = (ev: React.MouseEvent, cb: (posDiff: number) => void) => {\n    const newDiff = this.position - ev.clientX;\n\n    const movedEnough = Math.abs(newDiff) > 5;\n\n    if (this.clicked && movedEnough) {\n      this.dragging = true;\n    }\n\n    if (this.dragging && movedEnough) {\n      this.position = ev.clientX;\n      cb(newDiff);\n    }\n  };\n}\n\nconst LeftArrow = React.memo(() => {\n  const visibility = React.useContext<publicApiType>(VisibilityContext);\n  const isFirstItemVisible = visibility.useIsVisible('first', true);\n\n  return (\n    <Arrow\n      disabled={isFirstItemVisible}\n      onClick={() => visibility.scrollPrev()}\n      testId=\"left-arrow\"\n    >\n      Left\n    </Arrow>\n  );\n});\n\nconst RightArrow = React.memo(() => {\n  const visibility = React.useContext<publicApiType>(VisibilityContext);\n  const isLastItemVisible = visibility.useIsVisible('last', false);\n\n  return (\n    <Arrow\n      disabled={isLastItemVisible}\n      onClick={() => visibility.scrollNext()}\n      testId=\"right-arrow\"\n    >\n      Right\n    </Arrow>\n  );\n});\n\nfunction Arrow({\n  children,\n  disabled,\n  onClick,\n  testId,\n}: {\n  children: React.ReactNode;\n  disabled: boolean;\n  onClick: VoidFunction;\n  testId: string;\n}) {\n  return (\n    <ArrowButton disabled={disabled} onClick={onClick} data-testid={testId}>\n      {children}\n    </ArrowButton>\n  );\n}\nconst ArrowButton = styled('button')({\n  cursor: 'pointer',\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  marginBottom: '2px',\n  opacity: (props) => (props.disabled ? '0' : '1'),\n  userSelect: 'none',\n  borderRadius: '6px',\n  borderWidth: '1px',\n});\n\nconst Card = React.memo(\n  ({\n    onClick,\n    selected,\n    title,\n    itemId,\n  }: {\n    onClick: (context: publicApiType) => void;\n    selected: boolean;\n    title: string;\n    itemId: string;\n  }) => {\n    const visibility = React.useContext<publicApiType>(VisibilityContext);\n    const isVisible = visibility.useIsVisible(itemId, true);\n    const isVisibleDeffered = React.useDeferredValue(isVisible);\n    const handleClick = React.useCallback(\n      () => onClick(itemId),\n      [itemId, onClick],\n    );\n    const onKeyDown = React.useCallback(\n      (ev: React.KeyboardEvent) => {\n        ev.code === 'Enter' && handleClick();\n      },\n      [handleClick],\n    );\n\n    return (\n      <CardBody\n        data-cy={itemId}\n        onClick={handleClick}\n        onKeyDown={onKeyDown}\n        data-testid=\"card\"\n        role=\"button\"\n        tabIndex={0}\n        className=\"card\"\n        visible={isVisibleDeffered}\n        selected={selected}\n      >\n        <div className=\"header\">\n          <div>{title}</div>\n          <div className=\"visible\">\n            visible: {JSON.stringify(isVisibleDeffered)}\n          </div>\n          <div className=\"selected\">selected: {JSON.stringify(!!selected)}</div>\n        </div>\n        <div className=\"background\" />\n      </CardBody>\n    );\n  },\n  (prevProps, nextProps) =>\n    prevProps.selected === nextProps.selected &&\n    prevProps.title === nextProps.title,\n);\n\nconst CardBody = styled('div')({\n  border: '1px solid',\n  display: 'inline-block',\n  margin: '0 10px',\n  width: '160px',\n  userSelect: 'none',\n  borderRadius: '8px',\n  overflow: 'hidden',\n\n  '& .header': {\n    backgroundColor: 'white',\n  },\n\n  '& .visible': {\n    backgroundColor: (props) => (props.visible ? 'transparent' : 'gray'),\n  },\n\n  '& .background': {\n    backgroundColor: (props) => (props.selected ? 'green' : 'bisque'),\n    height: '200px',\n  },\n});\n\nconst getId = (index: number) => `${'test'}${index}`;\n\nconst getItems = (count: number) =>\n  Array(count)\n    .fill(0)\n    .map((_, ind) => ({ id: getId(ind) }));\n\nfunction onWheel(apiObj: publicApiType, ev: React.WheelEvent): void {\n  // NOTE: no good standart way to distinguish touchpad scrolling gestures\n  // but can assume that gesture will affect X axis, mouse scroll only Y axis\n  // of if deltaY too small probably is it touchpad\n  const isThouchpad = Math.abs(ev.deltaX) !== 0 || Math.abs(ev.deltaY) < 15;\n\n  if (isThouchpad) {\n    ev.stopPropagation();\n    return;\n  }\n\n  if (ev.deltaY < 0) {\n    apiObj.scrollNext();\n  } else {\n    apiObj.scrollPrev();\n  }\n}\n",availableImports:availableImports.S,modifyEditor:setupEditor.M});Performance_stories_Performance.parameters={...Performance_stories_Performance.parameters,docs:{...Performance_stories_Performance.parameters?.docs,source:{originalSource:"createLiveEditStory({\n  code: ExampleRaw,\n  availableImports,\n  modifyEditor: setupEditor\n})",...Performance_stories_Performance.parameters?.docs?.source}}};let __namedExportsOrder=["Performance"];try{Performance_stories_Performance.displayName="Performance",Performance_stories_Performance.__docgenInfo={description:"",displayName:"Performance",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/99_performance/Performance.stories.tsx#Performance"]={docgenInfo:Performance_stories_Performance.__docgenInfo,name:"Performance",path:"stories/99_performance/Performance.stories.tsx#Performance"})}catch(__react_docgen_typescript_loader_error){}}}]);